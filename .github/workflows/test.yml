name: Integration tests
on: [pull_request]
jobs:
  my-action:
    runs-on: ubuntu-latest
    steps:
    # - uses: mirromutth/mysql-action@v1.1
    #   with:
    #     character set server: 'utf8'
    #     collation server: 'utf8_general_ci'
    #     mysql version: '8.0'
    #     mysql database: 'webapp'
    #     mysql root password: ${{ secrets.PASSWORD }}
    - uses: actions/checkout@v4
    # - run: npm install
    # - name: Run tests
    #   env:
    #     USER: ${{ secrets.USER }}
    #     PASSWORD: ${{ secrets.PASSWORD }}
    #     HOST: ${{ secrets.HOST }}
    #   run: |
    #     sudo mkdir /var/log/webapp
    #     npm test
    # - run: sudo rm -R node_modules
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    # - name: 'Creating a new Instance Template'
    #   run: |
    #     DATABASE_NAME=$(gcloud secrets versions access latest --secret="DATABASE_NAME")
    #     DATABASE_PRIVATE_IP=$(gcloud secrets versions access latest --secret="DATABASE_PRIVATE_IPV4")
    #     DATABASE_USER=$(gcloud secrets versions access latest --secret="DATABASE_USER")
    #     DATABASE_PASSWORD=$(gcloud secrets versions access latest --secret="DATABASE_PASSWORD")
    #     LATEST_IMAGE=$(gcloud compute images list --format="value(NAME)" --project "cool-academy-413922" --no-standard-images --sort-by=~creationTimestamp --limit=1)
    #     CURRENT_VERSION=$(gcloud secrets versions access latest --secret="APP_INSTANCE_TEMPLATE_VERSION")
    #     APP_INSTANCE_TEMPLATE_VERSION=$(($CURRENT_VERSION+1))
    #     gcloud compute instance-templates create app-instance-template-$APP_INSTANCE_TEMPLATE_VERSION \
    #         --machine-type=e2-medium \
    #         --region=us-central1 \
    #         --instance-template-region=us-central1 \
    #         --tags=load-balanced-backend \
    #         --boot-disk-size=100GB \
    #         --boot-disk-type=pd-balanced \
    #         --image=projects/cool-academy-413922/global/images/$LATEST_IMAGE \
    #         --service-account=virtual-machine@cool-academy-413922.iam.gserviceaccount.com \
    #         --scopes=https://www.googleapis.com/auth/cloud-platform \
    #         --metadata=db_name=$DATABASE_NAME,db_private_ipv4=$DATABASE_PRIVATE_IP,db_user=$DATABASE_USER,db_password=$DATABASE_PASSWORD \
    #         --metadata-from-file=startup-script=packer/startup_script.sh \
    #         --network-interface=network-tier=PREMIUM,subnet=backend-subnet \

    # - name: 'Updating secret'
    #   run: |
    #       CURRENT_VERSION=$(gcloud secrets versions access latest --secret="APP_INSTANCE_TEMPLATE_VERSION")
    #       echo -n $(($CURRENT_VERSION+1)) | \
    #         gcloud secrets versions add APP_INSTANCE_TEMPLATE_VERSION --data-file=-

    # - name: 'Configuring the managed instance group to use this new template'
    #   run: |
    #     CURRENT_VERSION=$(gcloud secrets versions access latest --secret="APP_INSTANCE_TEMPLATE_VERSION")
    #     gcloud compute instance-groups managed set-instance-template \
    #           app-instance-group-manager \
    #           --template=projects/cool-academy-413922/regions/us-central1/instanceTemplates/app-instance-template-$CURRENT_VERSION \
    #           --region=us-central1 \
    - name: 'Recreating instances in the managed instance group'
      run: |
        gcloud compute instance-groups managed rolling-action replace app-instance-group-manager \
            --replacement-method=recreate \
            --max-surge=0 \
            --max-unavailable=0 \
            --region=us-central1

    - name: 'Check Recreation status of instances in the managed instance group'
      run: |
        gcloud compute instance-groups managed wait-until app-instance-group-manager \
            --version-target-reached \
            --region=us-central1 \       
# jobs:
#   build-node:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: mirromutth/mysql-action@v1.1
#       with:
#         character set server: 'utf8'
#         collation server: 'utf8_general_ci'
#         mysql version: '8.0'
#         mysql database: 'webapp'
#         mysql root password: ${{ secrets.PASSWORD }}
#     - uses: actions/checkout@v4
#     - run: npm install
#     - name: Run tests
#       env:
#         USER: ${{ secrets.USER }}
#         PASSWORD: ${{ secrets.PASSWORD }}
#         HOST: ${{ secrets.HOST }}
#       run: |
#         sudo mkdir /var/log/webapp
#         npm test